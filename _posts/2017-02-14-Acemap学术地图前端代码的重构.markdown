---
layout:     post
title:      "Acemap学术地图前端代码的重构"
subtitle:   "我要毕业，我要认真做毕设"
date:       2017-02-14 21:30:00
author:     "George"
header-img: "img/post-bg-acemap.jpg"
tags:
    - Acemap
    - Javascript
    - 技术
---

## 前言

今天是个美好的日子，只可惜不属于我而已。虽然没有出去约女孩子，但一个人在宿舍学完一课日语，健身房里跑跑步，打打游戏晚上再写下这篇博文，也是非常惬意的。

这是一篇关于毕业设计的博文。之前在选择毕设的时候也是一波三折，因为老师名额不够，所以导致我需要去补录志愿。所幸最后老师帮我争取到了一个名额，能够让我成功获得毕业的机会。

## 正文

### 毕设主要内容

我的毕设是纯工程的，没有什么理论。也就是说，不需要看大量论文，大部分的工作还是写代码。要做的是一个学术地图，名字叫做[Acemap](http://acemap.sjtu.edu.cn)。在我加入项目组之前，已经完成了一部分工作了，但是代码质量参差不齐。最后的项目目标是，能够将所有的地图都统一起来，有统一的格式。具体的UI可以参考谷歌地图。我负责的部分是前端，总体来说，我要做的内容就是：

- 设计合适的前端代码架构
- 重构前端代码，理清结构
- 设计UI
- 功能实现
- 完成文档和注释内容

### 代码架构

我们后台使用的是CodeIgniter框架。说实话，这个框架已经老的掉牙了，可能是之前几年的学长挑选的，现在要更换也已经几乎是不可能的了，因为代码数量已经非常庞大了。学习了一下CodeIgniter，个人感觉还是挺麻烦的。而且，在controller如何控制view的那段示例代码中，有类似如下的片段：

```
$this -> load -> view('header');
$this -> load -> view('content');
$this -> load -> view('footer');
```

最终我们显示的代码，是这三个文件中代码的顺序拼接。这样做其实我自己很不喜欢，原因有如下几点：

- 每一个文件的代码都没有完整的html格式
- 最终显示页面的html源代码不够直观，需要看多个文件
- 模块化不够明显。虽然header也可以作为某一个单独的模块列出来，但是其必定会带有一些html标签，在使用的时候不够方便。而且一旦模块放置的位置发生了改变，代码也需要相应的做出改变。

原本我最理想的而前端架构是用ReactJS或者VueJS，因为最终页面的风格是要统一的，公共的部分包括*搜索栏*， *svg地图*，因此只要将这两者作为模块单独放在文件中，由外界向他们传数据就可以很好的进行复用。这么做的话，最理想的是在基础页面加载完毕后，再通过RESTFUL API向后台请求获得具体的数据。但是，目前我们后台是将页面需要的数据直接传递给页面的，这样做的话，我们的页面必须以php结尾，才能够使用那些传递过来的数据，但即使这么做了，JS代码里是不能够嵌入PHP代码的，因此我们没有办法让ReactJS/VueJS模块得到后台controller直接传过来的数据，这样的代码架构就不能实现。如果要做的话，后台的代码就要重构，前端的代码也要重构，工作量之大并不是目前能顾得上的。

因此，前端这一块，目前并没有使用任何的框架。只是用了jQuery以及相关的一些库。因为jQuery是没有模块化的，因此我们也没有办法使用npm来引入相关的jQuery第三方插件。项目整体还是比较原始的，目前来看的话，也只能这样子了。

最终我对这个项目的前端代码框架的构思是，将*搜索栏*，*svg地图*这两个可以复用的部分的js代码单独拿出来建一个文件，然后一个页面只使用一个.php文件，页面中需要用到的特定的js代码以内联的方式写在.php文件中。这样可以在保证代码清晰的前提下，能够最大程度的复用一些组件。

### SVG地图生成

在我加入项目组之前，SVG地图是已经在后台生成完毕，作为一个单独的文件，在controller中进行拼接的。这样做有好处也有坏处，好处是加载的速度比较快，坏处就是可拓展性不强，如果有新的地图，我们就需要在后台重新生成一边，相对而言也比较占用空间。

目前我们已经抛弃了这样的方式，取而代之的是，用js代码来生成相应的svg地图。我们在后台存储了相应的地图所需要的元素，并用如下的代码读取出来：

```
$sql = "SELECT PaperID, Radius, X, Y, View1, View2, Year, JournalID, ConferenceID, LabelSize, LabelX, LabelY, Label FROM papermap_4_node WHERE FieldID = ?";
$nodes = $this->db_svg->query($sql, array($topicID))->result_array();
//get edges
$sql = "SELECT SourceID, TargetID, Width, View1, View2 FROM papermap_4_edge WHERE FieldID = ?;";
$edges = $this->db_svg->query($sql, array($topicID))->result_array();
```

得到相应的点和边的数据之后，将其传到前端，绘制成svg即可。

### UI界面

UI方面的话，我引入了bootstrap-standstone。相对来说还是比较美观，又带有些许严谨的风格，和“学术地图”这样的主题很相称。除此之外，我将领域的一些介绍内容也搬到了地图中，包括领域的父话题，子话题和该领域内发表论文数前50的作者。这样原本是两个页面，现在就合成一个页面了，风格也得到了统一。具体的话，还是直接来看对比图吧。

之前的UI：

![img](/img/in-post/Acemap/1.png)

现在的UI：

![img](/img/in-post/Acemap/2.png)

虽然我也不是专业的设计师，但我觉得还是美观了不少的。

## 后记

做了其实也不少，剩下的开学之后再说吧！





